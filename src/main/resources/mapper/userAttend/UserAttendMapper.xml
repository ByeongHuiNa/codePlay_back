<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codeplay.mapper.userAttend.UserAttendMapper">
	<!-- 사용자의 전체 출퇴근(근태) 내역 : user_no 사용 -->
    <select id="findAttendByUserNo" parameterType="Integer" resultType="AttendanceVO">
        select * from attendance 
        where user_no =#{user_no}
         order by date(attend_date) desc;
    </select>
    
    <!-- 사용자의 웝별 출퇴근(근태) 내역 : user_no, month 사용 -->
    <select id="findAttendByUserNoMonth" parameterType="Integer" resultType="AttendanceVO">
        select * from attendance where user_no =#{user_no}
        and date_part('month', attend_date) = #{month}
        order by attend_date desc
    </select>
    
    <!-- 사용자의 선택한 날짜의 출퇴근(근태) 내역 : user_no, date 사용 -->
    <select id="findAttendByUserNoDate" parameterType="Integer" resultType="AttendanceVO">
    select * from attendance where user_no = #{user_no}
	    and date_part('year', attend_date) = #{year}
	    and date_part('month', attend_date) = #{month}
	    and date_part('day', attend_date) = #{day}
	</select>
    
    <!-- 사용자가 속한 부서의 근태담당자 내역 : dept_no 사용 -->
	<select id="findManagerByDeptNo" parameterType="Integer" resultType="UserVO">
		select * from attendance_manager am 
			join users u on u.user_no = am.user_no 
			where dept_no = ${dept_no} 
	</select>
	
	<!-- 사용자의 오늘 날짜 출퇴근/내역 : user_no 사용 -->
    <select id="findTodayByUserNo" parameterType="Integer" resultType="AttendanceVO">
        select * from attendance 
        where user_no =#{user_no}
        and date(attend_date) = date(now())
        ORDER BY attend_no DESC
      	LIMIT 1
    </select>
    
    <!-- 사용자의 출근입력-->
    <insert id="startInsert" parameterType="AttendanceVO">
		<![CDATA[ 
		INSERT INTO attendance (user_no, attend_start, attend_date, attend_status)
      VALUES (1, NOW(), NOW(),
        CASE
          WHEN EXTRACT(HOUR FROM NOW()) > 9 THEN '지각'
          ELSE '정상'
        END
      );
		]]>
	</insert>
	
	<!-- 사용자의 퇴근입력-->
  <update id="endInsert" parameterType="AttendanceVO">
    <![CDATA[
      UPDATE attendance
      SET
        attend_end = NOW(),
        attend_total = (date_part('hour', NOW() - attend_start) || ':' || date_part('minute', NOW() - attend_start))::time,
        attend_status =
        CASE
          WHEN EXTRACT(HOUR FROM NOW() AT TIME ZONE 'UTC') >= 18 THEN '정상'
          WHEN EXTRACT(HOUR FROM NOW() AT TIME ZONE 'UTC') < 18 THEN '조퇴'
          WHEN EXTRACT(HOUR FROM attend_start) >= 9 AND EXTRACT(HOUR FROM NOW() AT TIME ZONE 'UTC') < 18 THEN '결근'
          ELSE '결근'
        END
      WHERE attend_no = (
        SELECT attend_no
        FROM attendance
        WHERE user_no = 1
        ORDER BY attend_no DESC
        LIMIT 1
      )
    ]]>
  </update>

	<!-- 사용자의 주간 근무시간 -->
		<select id="getUserAttendTotal" parameterType="Integer" resultType="AttendanceVO">
			SELECT *
			FROM attendance
			WHERE user_no = #{user_no}
			  AND DATE_TRUNC('week', attend_date) = DATE_TRUNC('week', NOW())
			  order by date(attend_date) asc
		</select>
	</mapper>


