<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codeplay.mapper.userAttend.UserAttendEditMapper">
	<!-- 사용자의 전체 출퇴근(근태) 수정 내역 가져오기 : user_no 사용 -->
    <select id="findAttendEditByUserNo" parameterType="Integer" resultType="com.codeplay.domain.attend.vo.UserAttendEditResponseVo">
        <![CDATA[   
        select e.attendapp_no, e.user_no, a.attend_no, a.attend_date, e.attendedit_title, e.attendedit_reason, 
        	e.attendedit_date, e.attendedit_kind, e.attendedit_start_time, e.attendedit_end_time, e.attendapp_user_no, 
        	u.user_name as attendapp_user_name, e.attendapp_status, e.attendapp_reason, e.attendapp_date
        from attendance_edit_approval e 
        join attendance a on e.attend_no = a.attend_no 
        join users u on e.attendapp_user_no = u.user_no
        where e.user_no = #{user_no} AND e.attendedit_kind < 3
        order by date(e.attendedit_date) desc;
        ]]>
    </select>
    
    <!-- 사용자가 본인의 출퇴근(근태)를 수정 요청 -->
    <select id="saveAttendEdit" resultType="Integer" parameterType="com.codeplay.domain.attend.dto.UserAttendEditDto">
		insert into attendance_edit_approval 
			(user_no, attendedit_title, attendedit_reason, attendedit_kind, attendedit_end_time, 
			  attendedit_start_time, attendedit_date, attend_no, attendapp_user_no, attendapp_status,
			  attendoriginal_start_time, attendoriginal_end_time, attendoriginal_status) 
		values 
			(#{user_no}, #{attendedit_title}, #{attendedit_reason}, #{attendedit_kind}, #{attendedit_end_time},
			  #{attendedit_start_time}, now(), #{attend_no}, #{attendapp_user_no}, #{attendapp_status},
			  #{attendoriginal_start_time}, #{attendoriginal_end_time}, #{attendoriginal_status})
		RETURNING attendapp_no
	</select>
</mapper>


