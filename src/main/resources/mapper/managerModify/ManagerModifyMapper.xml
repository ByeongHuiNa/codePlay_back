<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codeplay.mapper.managerModify.ManagerModifyMapper">
	<!-- 로그인 한 사용자의 부서 번호 : user_no 사용 -->
	<select id="findDeptNoByUserNo" parameterType="Integer" resultType="Integer">
		SELECT d.dept_no FROM dept d
		INNER JOIN dept_assign da ON d.dept_no = da.dept_no
		INNER JOIN users u ON da.user_no = u.user_no
		WHERE u.user_no = #{user_no}
	</select>
	
	<!-- 로그인 한 사용자와 같은 부서의 전체 직원 목록 : dept_no 사용 -->
	<select id="findAllUsersByDeptNo" parameterType="Integer" resultType="com.codeplay.domain.managerModify.vo.UserListResponseVo">
		SELECT u.user_no, u.user_name, u.user_position, u.user_email, u.user_phone,
			u.user_profile, u.user_hired_date, d.dept_no, d.dept_name
		FROM users u
		INNER JOIN dept_assign da
		ON u.user_no = da.user_no
		INNER JOIN dept d
		ON da.dept_no = d.dept_no
		WHERE d.dept_no = #{dept_no}
	</select>
	
	<!-- 근태담당자가 같은 부서의 직원 출퇴근 수정 처리 -->
	<insert id="saveAttendModify" parameterType="com.codeplay.domain.managerModify.dto.UserAttendModifyDto">
		insert into attendance_edit_approval 
			(user_no, attend_no, attendedit_title, attendedit_kind, attendedit_start_time, attendedit_end_time, 
			  attendapp_user_no, attendapp_status, attendapp_date, attendapp_reason, attendoriginal_start_time, 
			  attendoriginal_end_time, attendoriginal_status) 
		values 
			(#{user_no}, #{attend_no}, #{attendedit_title}, #{attendedit_kind}, #{attendedit_start_time}, 
			  #{attendedit_end_time}, #{attendapp_user_no}, #{attendapp_status}, now(), #{attendapp_reason},
			  #{attendoriginal_start_time}, #{attendoriginal_end_time}, #{attendoriginal_status})
	</insert>
	
</mapper>

